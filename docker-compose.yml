version: '3.8'

services:
    postgres:
        container_name: postgres
        image: postgres:${PG_VERSION}
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${USER}
            POSTGRES_PASSWORD: ${PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: /var/lib/postgresql/data/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready", "-d", "$POSTGRES_DB", "-U", "$USER", "-h", "localhost", "-p", "5432" ]
            interval: 30s
            timeout: 60s
            retries: 5
            start_period: 80s
        ports:
            - "${POSTGRES_EXPOSED_PORT}:5432"
        volumes:
            - ./scripts/init-db-user.sh:/docker-entrypoint-initdb.d/init-db-user.sh
            - ./volumes/postgresql:/var/lib/postgresql
            - ./volumes/postgresql:/var/lib/postgresql/data
    sonar:
        container_name: sonarqube
        image: sonarqube:${SONARQUBE_VERSION}-community
        restart: unless-stopped
        depends_on:
            postgres:
                condition: service_healthy
        environment:
            SONAR_VERSION: ${SONARQUBE_VERSION}
            SONAR_JDBC_USERNAME: ${USER}
            SONAR_JDBC_PASSWORD: ${PASSWORD}
            SONAR_JDBC_URL: jdbc:postgresql://postgres:${POSTGRES_EXPOSED_PORT}/${POSTGRES_DB}
        ports:
            - "9010:9000"
            - "9092:9092"
        volumes:
            - ./volumes/sonarqube_conf:/opt/sonarqube/conf
            - ./volumes/sonarqube_data:/opt/sonarqube/data
            - ./volumes/sonarqube_extensions:/opt/sonarqube/extensions
            - ./volumes/sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
            - ./volumes/sonarqube_logs:/opt/sonarqube/logs
