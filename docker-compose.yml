version: '3.1'

networks:
    sonarnet:
        driver: bridge

services:            
    postgres:
        container_name: postgres
        image: postgres:12.1
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${USER}
            POSTGRES_PASSWORD: ${PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: /var/lib/postgresql/data/data
        ports:
            - "${POSTGRES_EXPOSED_PORT}:5432"
        volumes:
            - ./scripts/init-db-user.sh:/docker-entrypoint-initdb.d/init-db-user.sh
            - ./volumes/postgresql:/var/lib/postgresql
            - ./volumes/postgresql:/var/lib/postgresql/data
        networks:
            - sonarnet

    sonarqube:
        container_name: sonarqube
        image: sonarqube:8.4-community
        restart: unless-stopped
        environment:
            SONARQUBE_VERSION: ${SONARQUBE_VERSION}
            SONARQUBE_JDBC_USERNAME: ${USER}
            SONARQUBE_JDBC_PASSWORD: ${PASSWORD}
            SONARQUBE_JDBC_URL: jdbc:postgresql://postgres:${POSTGRES_EXPOSED_PORT}/${POSTGRES_DB}
        ports:
            - "9000:9000"
            - "9092:9092"
        volumes:
            - ./volumes/sonarqube_conf:/opt/sonarqube/conf
            - ./volumes/sonarqube_data:/opt/sonarqube/data
            - ./volumes/sonarqube_extensions:/opt/sonarqube/extensions
            - ./volumes/sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
            - ./volumes/sonarqube_logs:/opt/soanrqube/logs
        networks:
            - sonarnet
        depends_on:
            - postgres
